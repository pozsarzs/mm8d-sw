#!/usr/bin/python3
# +----------------------------------------------------------------------------+
# | MM8D v0.6 * Growing house and irrigation controlling and monitoring system |
# | Copyright (C) 2020-2024 Pozs√°r Zsolt <pozsarzs@gmail.com>                  |
# | mm8d-test-pta9b01.py                                                       |
# | PTA9B01 temperature meter test program                                     |
# +----------------------------------------------------------------------------+

#   This program is free software: you can redistribute it and/or modify it
# under the terms of the European Union Public License 1.2 version.
#
#   This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.

# Exit codes:
#   0: normal exit
#   1: cannot open configuration file

import configparser
import io
import serial
import sys
import time
import pta9b01 as otm

# constants
CONFFILE='@prefix@/etc/mm8d/mm8d.ini'

# load configuration
def loadconfiguration(CONFFILE):
  T = 'outdoortempmeter'
  global otm_port
  global otm_speed
  global otm_modbusid
  try:
    with open(CONFFILE) as f:
      mm8d_config = f.read()
    config = configparser.RawConfigParser(allow_no_value=True)
    config.read_file(io.StringIO(mm8d_config))
    # power meter
    otm_modbusid = 0
    otm_modbusid = int(config.get(T, 'otm_modbusid'))
    otm_port = config.get(T, 'otm_port')
    otm_speed = 9600
    otm_speed = int(config.get(T, 'otm_speed'))
  except:
    print('ERROR #1: Cannot open configuration file!');
    sys.exit(1);

# main function
print('\nPTA9B01 test utility * (C) 2024 Pozsar Zsolt')
print('--------------------------------------------')
print('Load configuration: %s...' % CONFFILE)
loadconfiguration(CONFFILE)
print(' - used port: ' + otm_port)
print(' - baudrate:  ' + str(otm_speed))
otm.port = otm_port
otm.baudrate = otm_speed
while True:
  print('Press enter for read device (or q)')
  selection = input('> ')
  if selection == 'Q' or selection == 'q':
    print('\nQuitting.')
    sys.exit(0)
  if otm.readregisters(otm_modbusid) == 1:
    try:
      print(' ', round(otm.gett(), 2), 'C')
      print(' ', round(otm.getr(), 2), 'ohm')
    except:
      print('Data read error from ID', otm_modbusid)
  else:
    print('Data read error from ID', otm_modbusid)
sys.exit(0)

